# 0. Parámetros globales
PERIODO = 202504   # Cambiar según el periodo deseado

# 1. Importación de librerías
import pandas as pd
import numpy as np
import sqlalchemy
import urllib

############################### CONSEGUIR ARCHIVO ######################################

# 2. Conexión a la base de datos SQL
sql_params = urllib.parse.quote_plus(
    "DRIVER={ODBC Driver 18 for SQL Server};"
    "SERVER=mpponeuse2rhqsql.public.a293f7a7d79e.database.windows.net,3342;"
    "DATABASE=cnn_belcorp;"
    "UID=usrOwner_AR;"
    "PWD={kw.5Q%23Y2%2BAj%3F%29X%2Ab}"
)

engine = sqlalchemy.create_engine(f"mssql+pyodbc:///?odbc_connect={sql_params}")

# 3. Consulta a la tabla con los datos
query = f"""
SELECT *
FROM  [cnn_belcorp].[Connected].[Dashboard_Data]
WHERE [Periodo] = {PERIODO}
"""

df = pd.read_sql(query, engine)

############################### NORMALIZACION DE DATOS ######################################

# 4. Normalización de Nombre de Marcas

# 4.1. Mapeo de Excepciones
brand_map = {
    "ESIKA": "esika",
    "L'BEL": "L'BEL",
    "LOREAL": "L'Oreal",
    "L'OREAL": "L'Oreal",
    "MARY KAY": "Mary Kay"
}

# 4.2. Función Principal
def normalizar_brand(brand):
    brand_upper = str(brand).strip().upper()
    if brand_upper in brand_map:
        return brand_map[brand_upper]
    else:
        return str(brand).capitalize()

# 4.3. Aplicar normalización
df["Brand"] = df["Brand"].apply(normalizar_brand)

# 4.4. Verificar resultados
print(df["Brand"].unique())
df.head()

# 5. Normalización del campo IsCompetitiveSet

# 5.1. Definición de marcas competitivas
COMPETITIVE_BRANDS = {
    'ANEW', 'AVON', 'CYZONE', 'ESIKA', 'HOMEM TATO (REG)', "L'BEL PARIS", "L`BEL",
    "L'OREAL", 'L´OREAL', 'LBEL', 'LOREAL', 'LOREAL ACTIV', 'LOREAL AGE PERFECT',
    'LOREAL PARIS', 'LOREAL PLENITUDE', 'LOREAL PROFESSIONNEL', 'LOREAL REVITALIFT',
    'MARY KAY', 'MAYBELLINE', 'NATURA', 'NATURA (COSMETICOS)', 'NATURA COL',
    'NIVEA', 'NIVEA (REG)', 'NIVEA BODY', 'NIVEA DEO', 'NIVEA EXT', 'NIVEA FOR MEN',
    'NIVEA SUN', 'NIVEA VISAGE', 'NIVEA,FOR MEN,PRODUCTOS', 'PARIS,NAVIDAD LOREAL',
    "POND´S", 'PONDS', 'REVITALIF', 'REVITALIFT', 'TOTAL BLOCK', 'UNIQUE',
    'VOGUE', 'VOGUE (MAQUILLAJE)', 'VOGUE (REG)', 'YANBAL', 'YANBAL (REG)', 'YANBAL.COM'
}

# 5.2. Función Principal
def actualizar_is_competitive_set(df: pd.DataFrame, periodo: int) -> pd.DataFrame:
    if not {'IsCompetitiveSet', 'Periodo', 'Brand'}.issubset(df.columns):
        raise ValueError("El DataFrame debe tener las columnas: IsCompetitiveSet, Periodo y Brand")

    mask = (
        (df['IsCompetitiveSet'] == 0) &
        (df['Periodo'] == periodo) &
        (df['Brand'].str.upper().isin(COMPETITIVE_BRANDS))
    )
    df.loc[mask, 'IsCompetitiveSet'] = 1
    return df

# 5.3. Aplicar Normalización
df = actualizar_is_competitive_set(df, periodo=PERIODO)

# 5.4. Verificación
print(df["Brand"].unique())
print(df["IsCompetitiveSet"].value_counts())
df.head()

# 6. Normalización del campo ADTYPE

# 6.1. Mapeo según el campo Media y AdType
adtype_map = {
    'MAGAZINESEMANARIOS' : 'ANUNCIO REGULAR',
'MAGAZINEBANNER' : 'ANUNCIO REGULAR',
'MAGAZINESIN DEFINIR' : 'ANUNCIO REGULAR',
'MAGAZINESPOT' : 'ANUNCIO REGULAR',
'MAGAZINEDESP.MICROPROGRAMA' : 'ANUNCIO REGULAR',
'MAGAZINENORMAL' : 'ANUNCIO REGULAR',
'MAGAZINEATRIBUTO NO APLICABLE' : 'ANUNCIO REGULAR',
'MAGAZINEPRES.MICROPROGRAMA' : 'ANUNCIO REGULAR',
'MAGAZINEPUBLIREPORTAJE' : 'ANUNCIO REGULAR',
'MAGAZINEMENCION' : 'ANUNCIO REGULAR',
'MAGAZINEREVISTAS' : 'ANUNCIO REGULAR',
'MAGAZINEANUNCIO REGULAR' : 'ANUNCIO REGULAR',
'MAGAZINECOMERCIAL' : 'ANUNCIO REGULAR',
'MAGAZINEINTERNACIONAL' : 'ANUNCIO REGULAR',
'MAGAZINEENCARTE' : 'ANUNCIO REGULAR',
'OOHPANTALLA DIGITAL' : 'VALLA',
'OOHPASARELAS' : 'VALLA',
'OOHPANTALLA LED' : 'VALLA',
'OOHPUBLIPOSTE' : 'VALLA',
'OOHMUPI' : 'VALLA',
'OOHOTROS' : 'VALLA',
'OOHVALLAS' : 'VALLA',
'OOHPASARELA DIGITAL' : 'VALLA',
'OOHPAL.LUMINOSAS-' : 'VALLA',
'OOHLANDMARK' : 'VALLA',
'OOHRELOJ' : 'VALLA',
'OOHLI' : 'VALLA',
'OOHDIRECCIONALES' : 'VALLA',
'OOHTRASERAS' : 'VALLA',
'OOHPRISMA' : 'VALLA',
'OOHMINI VALLA' : 'VALLA',
'OOHROTATIVO ILUMINADO' : 'VALLA',
'OOHBUILDING' : 'VALLA',
'OOHUNIPOLE 12X4' : 'VALLA',
'OOHKIOSKO' : 'VALLA',
'OOHTLAI' : 'VALLA',
'OOHPANTALLAS' : 'VALLA',
'OOHPUENTE PEATONAL' : 'VALLA',
'OOHLA' : 'VALLA',
'OOHPARADA DE BUS' : 'VALLA',
'OOHUNIPOLAR' : 'VALLA',
'OOHMUPI DIGITAL' : 'VALLA',
'OOHI' : 'VALLA',
'OOHPALETA LED' : 'VALLA',
'OOHT' : 'VALLA',
'OOHTL' : 'VALLA',
'OOHUNIPOLE' : 'VALLA',
'OOHMONUMENTAL' : 'VALLA',
'OOHVALLA MONUMENTAL' : 'VALLA',
'OOHLANDMARK GRANDE' : 'VALLA',
'OOHL' : 'VALLA',
'OOHTERRACERO' : 'VALLA',
'OOHTLA' : 'VALLA',
'OOHMETALICA' : 'VALLA',
'OOHMUPIS' : 'VALLA',
'OOHPARADERO' : 'VALLA',
'OOHVALLA ESPECTACULAR' : 'VALLA',
'OOHATRIBUTO NO APLICABLE' : 'VALLA',
'OOHREF.PEATONALES' : 'VALLA',
'OOHCILINDRICA' : 'VALLA',
'OOHPARADAS' : 'VALLA',
'OOHTLI' : 'VALLA',
'OOHKIOSCO' : 'VALLA',
'OOHPARED' : 'VALLA',
'OOHVALLA' : 'VALLA',
'OOHTOP SITE' : 'VALLA',
'OOHLEDS' : 'VALLA',
'OTVINTERNACIONAL' : 'ANUNCIO REGULAR',
'OTVBANNERS' : 'ACCION ESPECIAL',
'OTVAUSP. AVANCE DE PROGRAMA' : 'ACCION ESPECIAL',
'OTVFOROS DE DISCUSION' : 'ACCION ESPECIAL',
'OTVBUMPER IN' : 'ACCION ESPECIAL',
'OTVOTROS' : 'ACCION ESPECIAL',
'OTVLOGO' : 'ACCION ESPECIAL',
'OTVCORTINAS' : 'ACCION ESPECIAL',
'OTVSOBREIMPOSICIÓN SONORA' : 'ACCION ESPECIAL',
'OTVDESPIDE' : 'ACCION ESPECIAL',
'OTVINTEGRACION AMBIENTAL' : 'ACCION ESPECIAL',
'OTVANUNCIO REGULAR' : 'ANUNCIO REGULAR',
'OTVCORTINILLAS' : 'ACCION ESPECIAL',
'OTVINSERTO' : 'ACCION ESPECIAL',
'OTVINTEGRACION ACTIVA' : 'ACCION ESPECIAL',
'OTVSOBREIMPOSICIÓN SILENTE' : 'ACCION ESPECIAL',
'OTVENTREVISTAS' : 'ACCION ESPECIAL',
'OTVBUMPER OUT' : 'ACCION ESPECIAL',
'OTVMUSICALES' : 'ACCION ESPECIAL',
'OTVBACK./MENCION' : 'ACCION ESPECIAL',
'OTVMENCION SOBIMP' : 'ACCION ESPECIAL',
'OTVNOVELAS' : 'ACCION ESPECIAL',
'OTVSPOTS PUBLICITARIOS' : 'ANUNCIO REGULAR',
'OTVMENCION PRODUCTO' : 'ACCION ESPECIAL',
'OTVSUPER SIN AUDIO' : 'ACCION ESPECIAL',
'OTVSERIES' : 'ACCION ESPECIAL',
'OTVCORTINILLA COMERCIAL' : 'ACCION ESPECIAL',
'OTVPRODUCT PLACEMENT' : 'ACCION ESPECIAL',
'OTVUNIFORME' : 'ACCION ESPECIAL',
'OTVSALUD' : 'ACCION ESPECIAL',
'OTVBANNER' : 'ACCION ESPECIAL',
'OTVPROMOCION CON AUSPICIO' : 'ACCION ESPECIAL',
'OTVAUSP. SEGMENTO' : 'ACCION ESPECIAL',
'OTVBACKING' : 'ACCION ESPECIAL',
'OTVSPOT' : 'ANUNCIO REGULAR',
'OTVDEPORTES' : 'ACCION ESPECIAL',
'OTVDESPIDE TV' : 'ACCION ESPECIAL',
'OTVCONTROL' : 'ACCION ESPECIAL',
'OTVSPOT TV' : 'ANUNCIO REGULAR',
'OTVDESPEDIDA' : 'ACCION ESPECIAL',
'OTVGACETILLA' : 'ACCION ESPECIAL',
'OTVPATROCINA' : 'ACCION ESPECIAL',
'OTVAUSPICIO PROGRAMAS' : 'ACCION ESPECIAL',
'OTVDESP.PROGRAMA' : 'ACCION ESPECIAL',
'OTVMENCIÓN' : 'ACCION ESPECIAL',
'OTVENTRETENIMIENTO' : 'ACCION ESPECIAL',
'OTVREPORTAJE' : 'ACCION ESPECIAL',
'OTVCAPSULA COMERCIAL' : 'ACCION ESPECIAL',
'OTVREJILLA TANDA' : 'ACCION ESPECIAL',
'OTVPRES.PROGRAMA' : 'ACCION ESPECIAL',
'OTVPATROCINIO' : 'ACCION ESPECIAL',
'OTVCAPSULA' : 'ACCION ESPECIAL',
'OTVESCENOGRAFIA' : 'ACCION ESPECIAL',
'OTVCLAQUETA' : 'ACCION ESPECIAL',
'OTVMENCION TV' : 'ACCION ESPECIAL',
'OTVMENCIONES' : 'ACCION ESPECIAL',
'OTVPUBLIREPORTAJE' : 'ACCION ESPECIAL',
'OTVBLOQUE PATROCINADO' : 'ACCION ESPECIAL',
'OTVVIRTUAL' : 'ACCION ESPECIAL',
'OTVSECCION' : 'ACCION ESPECIAL',
'OTVAUSPICIO SECTORES' : 'ACCION ESPECIAL',
'OTVPATROCINIO ENTRADA/SALIDA' : 'ACCION ESPECIAL',
'OTVSUPERIMPOSICION' : 'ACCION ESPECIAL',
'OTVPANTALLA' : 'ACCION ESPECIAL',
'OTVAVISO AUSPICIO' : 'ACCION ESPECIAL',
'OTVLOGOTIPOS' : 'ACCION ESPECIAL',
'OTVSOBREIMPOSICION' : 'ACCION ESPECIAL',
'OTVCONGELADO' : 'ACCION ESPECIAL',
'OTVMENCION' : 'ACCION ESPECIAL',
'OTVAVISO' : 'ACCION ESPECIAL',
'OTVCORTINA' : 'ACCION ESPECIAL',
'OTVAVANCE DE PROGRAMA' : 'ACCION ESPECIAL',
'OTVMENCION SUPERIMPOS' : 'ACCION ESPECIAL',
'OTVPRESENTACION' : 'ACCION ESPECIAL',
'OTVNOTICIAS' : 'ACCION ESPECIAL',
'OTVSUPERIMPO AUDIO' : 'ACCION ESPECIAL',
'OTVCOMERCIAL' : 'ANUNCIO REGULAR',
'OTVPRESENTA TV' : 'ACCION ESPECIAL',
'OTVCINTILLOS' : 'ACCION ESPECIAL',
'OTVCAPSULA TV' : 'ACCION ESPECIAL',
'PRENSACOMERCIAL' : 'ANUNCIO REGULAR',
'PRENSAPUBLIREPORTAJE' : 'ANUNCIO REGULAR',
'PRENSASECCION 4X4' : 'ANUNCIO REGULAR',
'PRENSAMENCION' : 'ANUNCIO REGULAR',
'PRENSAVARIOS' : 'ANUNCIO REGULAR',
'PRENSAANUNCIO REGULAR' : 'ANUNCIO REGULAR',
'PRENSAINTERNACIONAL' : 'ANUNCIO REGULAR',
'PRENSASAMPLING' : 'ANUNCIO REGULAR',
'PRENSASPOT' : 'ANUNCIO REGULAR',
'PRENSASEMANARIOS' : 'ANUNCIO REGULAR',
'PRENSANORMAL' : 'ANUNCIO REGULAR',
'PRENSABANNER' : 'ANUNCIO REGULAR',
'PRENSAESQUELA' : 'ANUNCIO REGULAR',
'PRENSADESP.MICROPROGRAMA' : 'ANUNCIO REGULAR',
'PRENSAPRES.MICROPROGRAMA' : 'ANUNCIO REGULAR',
'PRENSADIARIOS' : 'ANUNCIO REGULAR',
'PRENSAATRIBUTO NO APLICABLE' : 'ANUNCIO REGULAR',
'PRENSASIN DEFINIR' : 'ANUNCIO REGULAR',
'PTVMENCION' : 'ACCION ESPECIAL',
'PTVSOBREIMPOSICIÓN SILENTE' : 'ACCION ESPECIAL',
'PTVSPOT PANREGIONAL' : 'ANUNCIO REGULAR',
'PTVANUNCIO REGULAR' : 'ANUNCIO REGULAR',
'PTVCONGELADO' : 'ACCION ESPECIAL',
'PTVCOMERCIAL' : 'ANUNCIO REGULAR',
'PTVINTERNACIONAL' : 'ANUNCIO REGULAR',
'PTVCLAQUETA' : 'ACCION ESPECIAL',
'PTVPATROCINIO' : 'ACCION ESPECIAL',
'PTVBANNER' : 'ACCION ESPECIAL',
'PTVCORTINILLAS' : 'ACCION ESPECIAL',
'PTVDESP.PROGRAMA' : 'ACCION ESPECIAL',
'PTVPRES.MICROPROGRAMA' : 'ACCION ESPECIAL',
'PTVDESPIDE' : 'ACCION ESPECIAL',
'PTVSPOT' : 'ANUNCIO REGULAR',
'PTVAUTOPAUTA' : 'ACCION ESPECIAL',
'PTVPRES.PROGRAMA' : 'ACCION ESPECIAL',
'PTVSPOT TV' : 'ANUNCIO REGULAR',
'PTVDESP.MICROPROGRAMA' : 'ACCION ESPECIAL',
'PTVAVISO' : 'ACCION ESPECIAL',
'PTVPATROCINA' : 'ACCION ESPECIAL',
'PTVAVANCE DE PROGRAMA' : 'ACCION ESPECIAL',
'RADIOPROMOCION CON AUSPICIO' : 'ANUNCIO REGULAR',
'RADIOAVISO' : 'ANUNCIO REGULAR',
'RADIOSPOT' : 'ANUNCIO REGULAR',
'RADIOAUSP. SEGMENTO' : 'ANUNCIO REGULAR',
'RADIOPRESENTA RD' : 'ANUNCIO REGULAR',
'RADIOCUÑA' : 'ANUNCIO REGULAR',
'RADIOBANNER' : 'ANUNCIO REGULAR',
'RADIOATRIBUTO NO APLICABLE' : 'ANUNCIO REGULAR',
'RADIONORMAL' : 'ANUNCIO REGULAR',
'RADIOMENCIÓN' : 'ANUNCIO REGULAR',
'RADIOPATROCINIO' : 'ANUNCIO REGULAR',
'RADIODESP.MICROPROGRAMA' : 'ANUNCIO REGULAR',
'RADIOPRES.MICROPROGRAMA' : 'ANUNCIO REGULAR',
'RADIORADIO' : 'ANUNCIO REGULAR',
'RADIOPATROCINA' : 'ANUNCIO REGULAR',
'RADIOCOMERCIAL' : 'ANUNCIO REGULAR',
'RADIODESP. SEGMENTO' : 'ANUNCIO REGULAR',
'RADIOPRES.SUBPROGRAMA' : 'ANUNCIO REGULAR',
'RADIOCUNA' : 'ANUNCIO REGULAR',
'RADIOMENCION' : 'ANUNCIO REGULAR',
'RADIODESPIDE' : 'ANUNCIO REGULAR',
'RADIOMENCION RD' : 'ANUNCIO REGULAR',
'RADIOANUNCIO REGULAR' : 'ANUNCIO REGULAR',
'RADIODESPIDE RD' : 'ANUNCIO REGULAR',
'RADIOINTERNACIONAL' : 'ANUNCIO REGULAR',
'RADIOCAPSULA RD' : 'ANUNCIO REGULAR',
'RADIODESP.SUBPROGRAMA' : 'ANUNCIO REGULAR',
'PRENSAPRENSA' : 'ANUNCIO REGULAR',
'MAGAZINEMAGAZINE' : 'ANUNCIO REGULAR',
'RADIONULL' : 'ANUNCIO REGULAR',
'RADIONULL' : 'ANUNCIO REGULAR',
'RADIOCUÑAS' : 'ANUNCIO REGULAR',
'OOHNA' : 'VALLA',
'OOHNULL' : 'VALLA',
'PTVNA' : 'ANUNCIO REGULAR',
'OTVNA' : 'ANUNCIO REGULAR',
'OOHSENIOR' : 'VALLA',
'OOHREF.BRANDEADO' : 'VALLA',
'OOHREF.BRANDEADO' : 'VALLA',
'PTV' : 'ANUNCIO REGULAR',
'OTV' : 'ANUNCIO REGULAR',
'OTVINSERT' : 'ANUNCIO REGULAR',
'PTVCAPSULA TV' : 'ACCION ESPECIAL',
'PTVMENCION-SOBIMP' : 'ACCION ESPECIAL',
'PTVMENCION-SOBIMP' : 'ACCION ESPECIAL',
'OTVPUBLINOTAS' : 'ACCION ESPECIAL',
}

# 6.2. Función Principal
def normalizar_adtype(row):
    key = generar_clave_adtype(row)
    return adtype_map.get(key, row['ADTYPE'])

def generar_clave_adtype(row):
    media = str(row['Media']).upper()
    adtype = str(row['AdType']).upper()
    clave = (media + adtype).replace(" ", "")
    return clave

# 6.3. Aplicar Normalización
df['ADTYPE'] = df.apply(normalizar_adtype, axis=1)

# 6.4. Verificar resultados
print(df['ADTYPE'].value_counts())
df.head()
